<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zhj.devdeck.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="org.zhj.devdeck.entity.User">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="uuid" column="uuid" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
            <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
            <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
            <result property="deletedAt" column="deleted_at" jdbcType="TIMESTAMP"/>
            <result property="avatarUrl" column="avatar_url" jdbcType="VARCHAR"/>
            <result property="githubId" column="github_id" jdbcType="VARCHAR"/>
            <result property="githubLogin" column="github_login" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="UserDetailMap" type="org.zhj.devdeck.vo.UserDetailVO">
        <id property="uuid" column="uuid" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="nickName" column="nickname" jdbcType="VARCHAR"/>
        <result property="avatarUrl" column="avatar_url" jdbcType="VARCHAR"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <collection property="roles" ofType="org.zhj.devdeck.vo.RoleVO">
            <id property="id" column="role_id" jdbcType="INTEGER"/>
            <result property="name" column="role_name" jdbcType="VARCHAR"/>
            <result property="description" column="role_description" jdbcType="VARCHAR"/>
            <collection property="permissions" ofType="org.zhj.devdeck.vo.PermissionVO">
                <id property="id" column="permission_id" jdbcType="INTEGER"/>
                <result property="name" column="permission_name" jdbcType="VARCHAR"/>
                <result property="code" column="permission_code" jdbcType="VARCHAR"/>
                <result property="description" column="permission_description" jdbcType="VARCHAR"/>
            </collection>
        </collection>
    </resultMap>

    <resultMap id="UserListMap" type="org.zhj.devdeck.vo.UserVO">
        <id property="uuid" column="uuid" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="nickName" column="nickname" jdbcType="VARCHAR"/>
        <result property="avatarUrl" column="avatar_url" jdbcType="VARCHAR"/>
        <association property="role" javaType="org.zhj.devdeck.vo.RoleVO">
            <id property="id" column="role_id" jdbcType="INTEGER"/>
            <result property="name" column="role_name" jdbcType="VARCHAR"/>
            <result property="description" column="role_description" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <sql id="Base_Column_List">
        id,email,password,
        nickname,created_at,updated_at,
        deleted_at,avatar_url,github_id,
        github_login
    </sql>

    <select id="getUserByRole" resultType="org.zhj.devdeck.entity.User">
        select u.*
            FROM
            users u JOIN user_roles ur ON u.id = ur.user_id
            WHERE
            ur.role_id = #{code}
            LIMIT #{defaultUserTotal}
    </select>
    <select id="getUserDetail" resultType="org.zhj.devdeck.vo.UserDetailVO" resultMap="UserDetailMap">
        select u.uuid, u.email, u.nickname, u.avatar_url,u.created_at, u.updated_at,
        r.id as role_id,
        r.name as role_name,
        r.description as role_description,
        p.id as permission_id,
        p.name as permission_name,
        p.code as permission_code,
        p.description as permission_description
        FROM
        users u LEFT JOIN user_roles ur ON u.id = ur.user_id
        LEFT JOIN role r ON ur.role_id = r.id
        LEFT JOIN role_permissions rp ON r.id = rp.role_id
        LEFT JOIN permission p ON rp.permission_id = p.id
        WHERE
        u.uuid = #{uuid}
    </select>
    <select id="voPage" resultType="org.zhj.devdeck.vo.UserVO" resultMap="UserListMap">
        SELECT
        u.uuid,
        u.email,
        u.nickname,
        u.avatar_url,
        u.created_at,
        u.updated_at,
        r.id AS role_id,
        r.name AS role_name,
        r.description AS role_description
        FROM users u
                LEFT JOIN (
                SELECT ur.user_id,
                MIN(r.id) AS min_role_id
                FROM user_roles ur
                JOIN role r ON ur.role_id = r.id
                WHERE r.deleted_at IS NULL
                GROUP BY ur.user_id
                ) AS t ON u.id = t.user_id
        LEFT JOIN role r ON t.min_role_id = r.id
        WHERE u.deleted_at IS NULL
        <if test="query.nickName != null">
            AND u.nickname LIKE CONCAT('%', #{query.nickName}, '%')
        </if>
        <if test="query.email != null">
            AND u.email LIKE CONCAT('%', #{query.email}, '%')
        </if>
        ORDER BY u.id ASC
    </select>
</mapper>
